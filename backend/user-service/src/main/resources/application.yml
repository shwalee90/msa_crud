server:
  port: 0 # random port

spring:
  application:
    name: user-service
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect
        storage_engine: innodb
        format_sql: true
        default_batch_fetch_size: 1000
        jdbc:
          batch_size: 1000
        order_inserts: true
        order_updates: true
    show-sql: true
  cache:
    jcache:
      config: classpath:ehcache.xml
  datasource:
    url: ${database.url}?serverTimezone=Asia/Seoul&autoReconnect=true&validationQuery=select 1
    username: msaportal
    password: msaportal
    driver-class-name: com.mysql.cj.jdbc.Driver
  mail: # 비밀번호 변경 이메일 발송
    host: smtp.gmail.com # smtp host
    port: 587 # smtp port
    username: email_username # 계정
    password: 'email_password' # 비밀번호 - 구글 보안 2단계 인증 해제, 보안 수준이 낮은 앱의 액세스 허용(https://myaccount.google.com/lesssecureapps)
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
#  datasource:
#    url: jdbc:mysql://localhost:3306
#    username: msaportal
#    password: msaportal
#    driver-class-name: com.mysql.jdbc.Driver
#   oauth2 를 사용하기 위해서는 아래의 TODO 를 등록해야 함
  security:
    oauth2:
      client:
        registration:
          # /oauth2/authorization/google
          google:
            client-id: 464352487503-6ubaohhtho01anf29gb0jrcflet6fdho.apps.googleusercontent.com
            client-secret: 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
            scope: profile,email
          # 네이버는 Spring Security를 공식 지원하지 않기 때문에 CommonOAuth2Provider 에서 해주는 값들을 수동으로 입력한다.
          # /oauth2/authorization/naver
          # /oauth2/authorization/kakao

# config server actuator
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, info
  health:
    mail:
      enabled: false

info:
  app:
    name: User Service
    description: 로그인, 회원관리 및 관리자 기능을 제공

# 2시간(7,200,000), 1일(86,400,000) jwt token
token:
  expiration_time: 7200000
  refresh_time: 86400000
  secret: 'token_secret'

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}} # random port 사용시 eureka server에 인스턴스가 각각 표시되지 않는다
    preferIpAddress: true # 서비스간 통신 시 hostname 보다 ip 를 우선
  client:
    register-with-eureka: true # eureka 서버에 등록
    fetch-registry: true # 외부 검색 가능
    service-url:
      defaultZone: http://admin:admin@${eureka.instance.hostname:localhost}:8761/eureka

# file attach location - messages{lang}.properties 도 이 경로에 위치한다.
file:
  directory: ${app.home:${user.home}}/msa-attach-volume # url 사용시에는 사용되지 않는다
  url: http://${file.hostname:localhost}:8080 # nginx 로 파일 다운로드 처리
messages:
  directory: ${file.directory}/messages

apigateway:
  host: http://${apigateway.hostname:localhost}:${server.port}



egov:
  message: hello



database:
  url: jdbc:mysql://${mysql.hostname:localhost}:3306/msaportal



